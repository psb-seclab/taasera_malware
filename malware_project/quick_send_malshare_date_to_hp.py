#!/usr/bin/python 

"""
Script created to manually submit malshare samples later. Since many of the malshare samples are easily recognized by
virus scanners yet often do not have md5s in the VirusTotal database upon initial download the Cuckoo queue was being
flooded by too many low quality malshare samples. For this reason malshare samples were excluded from upload to
Cuckoo. Now that time has gone by we want to go back to submit these samples...
"""

import sys
import paramiko
from scp import SCPClient
import os, datetime
import time

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'malware_project.settings')
import django
django.setup()

from malware.models import Malware, MType, Family

server = '70.61.16.2'
port = 22
user = 'scp_in'
password = 'pooT$uMsamples1229'

archive_dir = "/home/maldata/taasera_malware_repository/" + sys.argv[1]
dest_path = "/home/scp_in/taasera_malware_repository/" + sys.argv[1]


### !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ###
### Setting the environment according to malware_project.settings
### Results in change to EST despite this system running in PDT
### !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ###

def createSSHClient(server, port, user, password):
	client = paramiko.SSHClient()
	client.load_system_host_keys()
	client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
	client.connect(server, port, user, password)
	return client

if __name__ == '__main__':
	#main()
	print 'Connecting to ' + server + '...'
	ssh = createSSHClient(server, port, user, password)
	scp = SCPClient(ssh.get_transport())
	print 'Connected'

	dict_sample = {}

	print "archive_dir = ", archive_dir

	files = [f for f in os.listdir(archive_dir) if os.path.isfile(os.path.join(archive_dir,f))]

	for item in files:
		potential_dict_sample = os.path.join(archive_dir, item), item[:32], item[33:]
		malware_sample = Malware.objects.filter(md5=item[:32])		
		if len(malware_sample) == 0:
			print "ERROR! ", potential_dict_sample[0], " with md5 ", potential_dict_sample[1], " from ", potential_dict_sample[2], " is not in the database"
			continue
# ALTERED ON 2015-10-29 TO SEND ALL MALSHARE AND, NOT JUST NEW AND BINARY
#		if malware_sample[0].file_type == "application/octet-stream" and malware_sample[0].is_new == True and potential_dict_sample[2] == 'malshare' :
		if potential_dict_sample[2] == 'malshare' :
			dict_sample[item] = potential_dict_sample
			print "Sample ", potential_dict_sample[0], potential_dict_sample[1], potential_dict_sample[2]

	

	cnt = 0
	dest_path = dest_path + "/"
	print 'Samples go to', dest_path

	for k in dict_sample:
		cmd_mkdir = "mkdir -p " + dest_path + dict_sample[k][2]
		print "Current mkdir command: ", cmd_mkdir 
		ssh.exec_command(cmd_mkdir)
		time.sleep(0.2)
		cnt += 1
		path_to_bin =  dict_sample[k][0]
		print "path_to_bin = ", path_to_bin
		print cnt, '[Put]', dict_sample[k][0], "as", dict_sample[k][2]+"/"+dict_sample[k][1]
		target = dest_path + dict_sample[k][2] + "/" + dict_sample[k][1]
		print "target = ", target
		scp.put(path_to_bin, target)

	scp.close()
