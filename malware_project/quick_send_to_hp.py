#!/usr/bin/python 

"""
11/8/15 Altering script to only send text/html samples and sending Nov 4 - 7 one day at a time
to a texthtml folder within that date
"""
import paramiko
from scp import SCPClient
import os, datetime
import time
import sys

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'malware_project.settings')
import django
django.setup()

from malware.models import Malware, MType, Family

server = '70.61.16.2'
port = 22
user = 'scp_in'
password = 'pooT$uMsamples1229'

#archive_dir = "/home/maldata/taasera_malware_repository/2015-09-16"
#dest_path = "/home/scp_in/taasera_malware_repository/2015-09-16"
#archive_dir = "/home/maldata/taasera_malware_repository/2015-09-18"
#dest_path = "/home/scp_in/taasera_malware_repository/2015-09-18"
#archive_dir = "/home/maldata/taasera_malware_repository/2015-10-03"
#dest_path = "/home/scp_in/taasera_malware_repository/2015-10-03"
#archive_dir = "/home/maldata/taasera_malware_repository/2015-10-05"
#dest_path = "/home/scp_in/taasera_malware_repository/2015-10-05"
#archive_dir = "/home/maldata/taasera_malware_repository/2015-09-30"
#dest_path = "/home/scp_in/taasera_malware_repository/2015-09-30_2"
#archive_dir = "/home/maldata/taasera_malware_repository/2015-10-27"
#dest_path = "/home/scp_in/taasera_malware_repository/2015-10-27"
#archive_dir = "/home/maldata/taasera_malware_repository/2015-10-28"
#dest_path = "/home/scp_in/taasera_malware_repository/2015-10-28"
# Doing Nov 4, 5, 6, 7
#archive_dir = "/home/maldata/taasera_malware_repository/2015-11-07"
#dest_path = "/home/scp_in/taasera_malware_repository/2015-11-07/texthtml"
archive_dir = "/home/maldata/taasera_malware_repository/2015-11-14"
dest_path = "/home/scp_in/taasera_malware_repository/2015-11-14_fix"

### !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ###
### Setting the environment according to malware_project.settings
### Results in change to EST despite this system running in PDT
### !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ###

def createSSHClient(server, port, user, password):
	client = paramiko.SSHClient()
	client.load_system_host_keys()
	client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
	client.connect(server, port, user, password)
	return client

if __name__ == '__main__':
	if len(sys.argv) == 3:
		archive_dir = sys.argv[1]
		dest_path = sys.argv[2]
		print archive_dir
		print dest_path
		exit
	else:
		print "Usage: quick_send_to_hp.py <local_from_folder> <remote_destination_folder>"

	#main()
	print 'Connecting to ' + server + '...'
	ssh = createSSHClient(server, port, user, password)
	scp = SCPClient(ssh.get_transport())
	print 'Connected'

#	dest_path = dest_dir + yesterday_str

	dict_sample = {}

#	archive_dir = os.path.join(archive_dir, yesterday_str)
	print "archive_dir = ", archive_dir

	files = [f for f in os.listdir(archive_dir) if os.path.isfile(os.path.join(archive_dir,f))]

	for item in files:
		potential_dict_sample = os.path.join(archive_dir, item), item[:32], item[33:]
		malware_sample = Malware.objects.filter(md5=item[:32])		
		if len(malware_sample) == 0:
			print "ERROR! ", potential_dict_sample[0], " with md5 ", potential_dict_sample[1], " from ", potential_dict_sample[2], " is not in the database"
			continue
#		if malware_sample[0].file_type == "application/octet-stream" and malware_sample[0].is_new == True and potential_dict_sample[2] != 'cuckoo' and potential_dict_sample[2] != 'malshare' :
#		if potential_dict_sample[2] != 'cuckoo' and potential_dict_sample[2] != 'malshare' :
# Now include malshare
#		if potential_dict_sample[2] != 'cuckoo' and malware_sample[0].file_type == "text/html" :
# For 11/14/15 fix -Brian
		if potential_dict_sample[2] != 'cuckoo' and malware_sample[0].file_type == "application/octet-stream" :
			dict_sample[item] = potential_dict_sample
			print "Sample ", potential_dict_sample[0], potential_dict_sample[1], potential_dict_sample[2]
#                else:
#                        if malware_sample[0].file_type != "application/octet-stream":
#                                print "not application " + potential_dict_sample[0]
#                        if malware_sample[0].is_new != True:
#                                print "not new " + potential_dict_sample[0]
#                        if potential_dict_sample[2] == "cuckoo":
#                                print "cuckoo sample " + potential_dict_sample[0]
#                        if potential_dict_sample[2] == "malshare":
#                                print "malshare sample " + potential_dict_sample[0]

	

	cnt = 0
	dest_path = dest_path + "/"
	print 'Samples go to', dest_path

	for k in dict_sample:
		cmd_mkdir = "mkdir -p " + dest_path + dict_sample[k][2]
		print "Current mkdir command: ", cmd_mkdir 
		ssh.exec_command(cmd_mkdir)
		time.sleep(0.2)
		cnt += 1
		path_to_bin =  dict_sample[k][0]
		print "path_to_bin = ", path_to_bin
		print cnt, '[Put]', dict_sample[k][0], "as", dict_sample[k][2]+"/"+dict_sample[k][1]
		target = dest_path + dict_sample[k][2] + "/" + dict_sample[k][1]
		print "target = ", target
		scp.put(path_to_bin, target)

	scp.close()
