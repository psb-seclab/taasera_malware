#
# The default server
#
server {
    listen 8080;
    # If you want certain Non-SSL areas on your site, add a location block here
    # read up on the nginx docs.
    # Be sure to replace localhost in the following rule to the server name/IP address.
    #return 301 https://localhost/;
    return 301 https://$host$request_uri;
}


server {
    listen  443 ssl;
    # server_name  _;
    # start mine
    ssl on;
    ssl_certificate /home/honeydrive/git-repos/taasera_malware/malware_project/cert/mal-cert.pem;
    ssl_certificate_key /home/honeydrive/git-repos/taasera_malware/malware_project/cert/mal-key.pem;
    ssl_protocols        SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers          HIGH:!aNULL:!MD5;
    server_name localhost;
    # full path to the project dir - the dir that contains the urls.py file
    #root /path/to/project/dir/dummy;
    
    root /home/honeydrive/git-repos/taasera_malware/malware_project/malware_project;
    #root /home/honeydrive/git-repos/taasera_malware/malware_project/malware;
    access_log /home/honeydrive/nginx_access.log;
    error_log /home/honeydrive/nginx_error.log;

    location /static/{
        autoindex on;
        # The path to the actual project directory here - the one which contains the static/ 
        # dir holding the static files for this project
        #root /path/to/project/dir/dummy;
	alias /home/honeydrive/git-repos/taasera_malware/staticfiles/;
    }

    location / {
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 10;
	# this is key to prevent infinite redirection loops
	proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 10;
        proxy_pass http://localhost:8000;
	proxy_redirect     off;
#	proxy_redirect http://localhost:8080 https://0.0.0.0;
    }

    error_page  404              /404.html;
    location = /404.html {
        root   /usr/share/nginx/html;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

