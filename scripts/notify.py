#!/usr/bin/python
import os
import time
import datetime
import hashlib
import sys
import urllib
import urllib2
import json
import smtplib

#Private API Key
api_key = ["62c0004a48c6566a37ce377ebcabfb3b5d3258b462a25fc991c960d4bc84420a", 
"08627a35926572f1076fac900d58b974faeb4f977a6d0b4f17f01ed6b6f643d6", 
"14eb0af90f3162afd6875c3eaa61da003ca39725d06f9445f469c61913f4f7b0"]

api_count = 0
analyzed_samples = 0
new_samples = 0
new_sample_list = []
email_name = "tslns17"
email_pass = "s*dIAK5'"

path_to_watch = "/opt/dionaea/var/dionaea/binaries"
new_output_file = "/opt/dionaea/var/dionaea/new_bin_log.txt"
old_output_file = "/opt/dionaea/var/dionaea/old_bin_log.txt"
epoch_time = datetime.datetime.utcfromtimestamp(0)
now = datetime.datetime.now()
target_time = (now - epoch_time).total_seconds() - 3600
current_time= datetime.datetime.utcfromtimestamp(target_time)
current_year = current_time.strftime("%Y")
current_month= current_time.strftime("%m")
current_day= current_time.strftime("%d")

#new_output = open("new_bin_log.txt", "a")
new_output = open(new_output_file , "a")
new_output.write("####################################################################\n")
new_output.write("Scan Time: " + datetime.datetime.fromtimestamp(time.time()).strftime('%Y-%m-%d %H:%M:%S') + "\n")
new_output.close()
#old_output = open("old_bin_log.txt", "a")
old_output = open(old_output_file, "a")
old_output.write("####################################################################\n")
old_output.write("Scan Time: " + datetime.datetime.fromtimestamp(time.time()).strftime('%Y-%m-%d %H:%M:%S') + "\n")
old_output.close()

file_list = dict ([(f, None) for f in os.listdir (path_to_watch)])
#after = dict ([(f, None) for f in os.listdir (path_to_watch)])
#added = [f for f in after if not f in before]
#removed = [f for f in before if not f in after]

for f in file_list:
	mod_time = os.path.getmtime(path_to_watch + "/" + f)
	mod_year = datetime.datetime.fromtimestamp(mod_time).strftime("%Y")
	mod_month= datetime.datetime.fromtimestamp(mod_time).strftime("%m")
	mod_day = datetime.datetime.fromtimestamp(mod_time).strftime("%d")

	if(mod_day >= current_day and mod_month >= current_month and mod_year >= current_year and f[0:5] != "http-"): 
		print(f)
		jdata = ""
		while(jdata == ""):
			param = {'resource':f,'apikey':api_key[api_count % 3]}
			api_count = api_count + 1
			url = "https://www.virustotal.com/vtapi/v2/file/rescan"
			data = urllib.urlencode(param)
			result = urllib2.Request(url,data)
			response = urllib2.urlopen(result)
			jdata =  response.read()
			if(jdata == ""):
				time.sleep(33)
		json_data = json.loads(jdata)
		print(json_data)
		analyzed_samples = analyzed_samples + 1

		# Binary has not been encountered by VirusTotal
		if json_data["response_code"] == 0:
			print("Binary is new")
			new_samples = new_samples + 1	
			new_sample_list.append(f)
			new_output = open(new_output_file , "a")
			new_output.write("---------------------------------------\n")
			new_output.write("Filename: " + f + "\n")
			new_output.write("Scan Time: " + datetime.datetime.fromtimestamp(time.time()).strftime('%Y-%m-%d %H:%M:%S') + "\n")
			new_output.write("---------------------------------------\n\n")
			new_output.close();

		# Binary has been encountered by VirusTotal
		else:
			print("Binary is old")
			old_output = open(old_output_file , "a")
			old_output.write("---------------------------------------\n")
			old_output.write("Filename: " + f + '\n')
			old_output.write("Report URL: " + json_data["permalink"] + "\n")
			old_output.write("Scan Time: " + datetime.datetime.fromtimestamp(time.time()).strftime('%Y-%m-%d %H:%M:%S') + '\n')
			old_output.write("---------------------------------------\n\n")
			old_output.close();

new_output = open(new_output_file, "a")
new_output.write("Samples Scanned: " + str(analyzed_samples) + "\n")
new_output.write("New Samples: " + str(new_samples) + "\n")
new_output.write("####################################################################\n\n")
new_output.close();
old_output = open(old_output_file, "a")
old_output.write("Samples Scanned: " + str(analyzed_samples) + "\n")
old_output.write("Old Samples: " + str(analyzed_samples - new_samples) + "\n")
old_output.write("####################################################################\n\n")
old_output.close();

report_output = open("report_log.txt", "a")
report_output.write("####################################################################\n")
report_output.write("Scan Time: " + datetime.datetime.fromtimestamp(time.time()).strftime('%Y-%m-%d %H:%M:%S') + "\n")
report_output.write("Samples Scanned: " + str(analyzed_samples) + "\n")
report_output.write("New Samples: " + str(new_samples) + "\n")
report_output.write("Old Samples: " + str(analyzed_samples - new_samples) + "\n")
report_output.write("####################################################################\n\n")
report_output.close()

sender = 'TaaSera Lab'
#receivers = ["mstankiewicz@taasera.com"]
receivers = ["ahankewycz@taasera.com", "mstankiewicz@taasera.com", "zxiao@taasera.com", "oconnellb@taasera.com"]
message = "Subject: Malware Report " + current_month + "/" + current_day + "/" + current_year + "\n"
message += "Daily Malware Report\n"
message += "__________________________\n"
message += "Unique Binaries: " + str(analyzed_samples) + "\n"
message += "New Binaries: " + str(new_samples) + "\n"
message += "__________________________\n"
for b in new_sample_list:
	message += b + "\n"
try:
	smtpObj = smtplib.SMTP("smtp.gmail.com:587")
	smtpObj.starttls()
	smtpObj.login(email_name, email_pass)
	smtpObj.sendmail(sender, receivers, message)
	smtpObj.quit()
	print "email sent"
except smtplib.SMTPException:
	print "error sending email"


def run():
	
	return


if __name__ == '__main__':
	run()

